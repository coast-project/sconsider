import SConsider, pdb

Import('*')

env = SConsider.cloneBaseEnv()
conf = SConsider.Configure(env)
if conf.CheckLibWithHeader('ssl', 'openssl/ssl.h', 'C') and conf.CheckLib('crypto'):
    conf.env.Append(CPPDEFINES='HAS_OPENSSL')
opensslbin = conf.CheckExecutable('openssl')
env = conf.Finish()

buildSettings = {}
if 'HAS_OPENSSL' in env['CPPDEFINES']:
    buildSettings[packagename] = {
        'linkDependencies' : [
            packagename + '.ssl',
            packagename + '.crypto',
        ],
    }
    buildSettings['ssl'] = {
        'public' : {
            'appendUnique'     : {
                'LIBS'         : ['ssl'],
            },
        },
    }
    buildSettings['crypto'] = {
        'public' : {
            'appendUnique'     : {
                'LIBS'         : ['crypto'],
            },
        },
    }
    if opensslbin:
        buildSettings['opensslbin'] = {
            'sourceFiles'      : [opensslbin],
            'targetType'       : 'InstallBinary',
        }
        buildSettings['openSSL'] = {
            'targetType'       : 'ProgramApp',
            'runConfig' : {
            },
            'requires' : [
                packagename + '.ssl',
                packagename + '.crypto',
            ],
            'usedTarget'       : packagename + '.opensslbin',
        }

SConsider.createTargets(packagename, buildSettings)
