import SConsider, ThirdParty, os, pdb

Import('*')

buildSettings = {}

def configure():
    if GetOption('clean') or GetOption('help'):
        return True
    
    def CheckExecutable(context, executable):
        context.Message('Checking for executable {0}... '.format(executable))
        result = WhereIs(executable)
        context.Result(bool(result))
        return result
    
    env = SConsider.cloneBaseEnv()
    conf = Configure(env, custom_tests = {'CheckExecutable' : CheckExecutable})
    if not conf.CheckCHeader('oci.h'):
        print 'Did not find header for '+packagename
        return False
    if not conf.CheckLib('occi'):
        print 'Did not find library for '+packagename
        return False
    if not conf.CheckLib('clntsh'):
        print 'Did not find library for '+packagename
        return False
    if not conf.CheckLib('nnz11'):
        print 'Did not find library for '+packagename
        return False
    if not conf.CheckLib('ociicus'):
        print 'Did not find library for '+packagename
        return False
    if not conf.CheckLib('ociei'):
        print 'Did not find library for '+packagename
        return False
    if not conf.CheckLib('sqlplus'):
        print 'Did not find library for '+packagename
        return False
    if not conf.CheckLib('sqlplusic'):
        print 'Did not find library for '+packagename
        return False
    sqlplusbin = conf.CheckExecutable('sqlplus')
    if not sqlplusbin:
        print 'Did not find executable for '+packagename
        return False
    env = conf.Finish()
    return True

if ThirdParty.hasBinaryDist(packagename):    
    buildSettings = {
        packagename : {
            'linkDependencies' : [
                packagename + '.nnz',
                packagename + '.clntsh',
            ],
            'requires' : [
                packagename + '.ociicus',
            ],
            'targetType'       : 'IncludeOnly',
            'public' : {
                'includeSubdir': 'include',
            }
        },
        'occi' : {
            'sourceFiles'      : [ThirdParty.getBinaryDistDir(packagename).File('occi')],
            'libVersion'       : '.11.1',
            'targetType'       : 'PrecompiledLibraryInstallBuilder',
        },
        'clntsh' : {
            'sourceFiles'      : [ThirdParty.getBinaryDistDir(packagename).File('clntsh')],
            'libVersion'       : '.11.1',
            'targetType'       : 'PrecompiledLibraryInstallBuilder',
        },
        'nnz' : {
            'sourceFiles'      : [ThirdParty.getBinaryDistDir(packagename).File('nnz11')],
            'targetType'       : 'PrecompiledLibraryInstallBuilder',
        },
        'ociicus' : {  # us language support library
            'sourceFiles'      : [ThirdParty.getBinaryDistDir(packagename).File('ociicus')],
            'targetType'       : 'PrecompiledLibraryInstallBuilder',
        },
        'ociei' : {  # oci library supporting all character sets
            'sourceFiles'      : [ThirdParty.getBinaryDistDir(packagename).File('ociei')],
            'targetType'       : 'PrecompiledLibraryInstallBuilder',
        },
        'libsqlplus' : {
            'sourceFiles'      : [ThirdParty.getBinaryDistDir(packagename).File('sqlplus')],
            'targetType'       : 'PrecompiledLibraryInstallBuilder',
        },
        'libsqlplusic' : {
            'sourceFiles'      : [ThirdParty.getBinaryDistDir(packagename).File('sqlplusic')],
            'targetType'       : 'PrecompiledLibraryInstallBuilder',
        },
        'sqlplusbin' : {
            'sourceFiles'      : [ThirdParty.getBinaryDistDir(packagename).File('sqlplus')],
            'targetType'       : 'PrecompiledBinary',
        },
        'sqlplus' : {
            'targetType'       : 'ProgramApp',
            'runConfig' : {
            },
            'requires' : [
                packagename + '.' + packagename,
                packagename + '.libsqlplus',
                packagename + '.libsqlplusic',
            ],
            'usedTarget'       : packagename + '.sqlplusbin',
        }
    }
elif ThirdParty.hasSourceDist(packagename):
    print '--with-src-'+packagename+' not implemented!'
    Exit(1)
else:
    if configure():
        buildSettings = {
            packagename : {
                'linkDependencies' : [
                    packagename + '.nnz',
                    packagename + '.clntsh',
                ],
                'requires' : [
                    packagename + '.ociicus',
                ],
            },
            'occi' : {
                'public' : {
                    'appendUnique'     : {
                        'LIBS'         : ['occi'],
                    },
                },
            },
            'clntsh' : {
                'public' : {
                    'appendUnique'     : {
                        'LIBS'         : ['clntsh'],
                    },
                },
            },
            'nnz' : {
                'public' : {
                    'appendUnique'     : {
                        'LIBS'         : ['nnz11'],
                    },
                },
            },
            'ociicus' : {  # us language support library
                'public' : {
                    'appendUnique'     : {
                        'LIBS'         : ['ociicus'],
                    },
                },
            },
            'ociei' : {  # oci library supporting all character sets
                'public' : {
                    'appendUnique'     : {
                        'LIBS'         : ['ociei'],
                    },
                },
            },
            'libsqlplus' : {
                'public' : {
                    'appendUnique'     : {
                        'LIBS'         : ['sqlplus'],
                    },
                },
            },
            'libsqlplusic' : {
                'public' : {
                    'appendUnique'     : {
                        'LIBS'         : ['sqlplusic'],
                    },
                },
            },
            'sqlplusbin' : {
                'sourceFiles'      : [sqlplusbin],
                'targetType'       : 'PseudoFile',
            },
            'sqlplus' : {
                'targetType'       : 'ProgramApp',
                'runConfig' : {
                },
                'requires' : [
                    packagename + '.' + packagename,
                    packagename + '.libsqlplus',
                    packagename + '.libsqlplusic',
                ],
                'usedTarget'       : packagename + '.sqlplusbin',
            }
        }

SConsider.createTargets(packagename, buildSettings)
