import SConsider, ThirdParty, os, pdb

Import('*')

if ThirdParty.hasBinaryDist(packagename):
    buildSettings = {
        packagename : {
            'linkDependencies' : [
                packagename+'.mysqlclient',
            ],
            'targetType'       : 'IncludeOnly',
            'public' : {
                'includeSubdir': 'include',
            },
        },
        'mysqlclient' : {
            'sourceFiles'      : [ThirdParty.getBinaryDistPath(packagename).File('/mysqlclient')],
            'targetType'       : 'PrecompiledLibraryInstallBuilder',
        },
        'mysqlbin' : {
            'sourceFiles'      : [ThirdParty.getBinaryDistPath(packagename).File('/mysql')],
            'targetType'       : 'PrecompiledBinaryInstallBuilder',
        }
    }
elif ThirdParty.hasSourceDist(packagename):
    print '--with-src-'+packagename+' not implemented!'
    Exit(1)
else:
    def CheckExecutable(context, executable):
        context.Message('Checking for executable {0}... '.format(executable))       
        result = WhereIs(executable)
        context.Result(bool(result))
        return result
    
    env = SConsider.cloneBaseEnv()
    conf = Configure(env, custom_tests = {'CheckExecutable' : CheckExecutable})
    if not conf.CheckCHeader('mysql/mysql.h'):
        print 'Did not find header for '+packagename
        Exit(1)
    if not conf.CheckLib('mysqlclient'):
        print 'Did not find library or header for '+packagename
        Exit(1)
    if not conf.CheckLibWithHeader('mysqlclient', 'mysql/mysql.h', 'C'):
        print 'Did not find library or header for '+packagename
        Exit(1)
    mysqlbin = conf.CheckExecutable('mysql')
    if not mysqlbin:
        print 'Did not find executable for '+packagename
        Exit(1)
    env = conf.Finish()
    
    buildSettings = {
        packagename : {
            'linkDependencies' : [
                packagename+'.mysqlclient',
            ],
        },
        'mysqlclient' : {
            'public' : {
                'appendUnique'     : {
                    'LIBS'         : ['mysqlclient'],
                },
            },
        },
        'mysqlbin' : {
            'sourceFiles'      : [mysqlbin],
            'targetType'       : 'PseudoFile',
        }
    }

SConsider.createTargets(packagename, buildSettings)
