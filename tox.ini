# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = {py27}-scons{23,24,25},coverage,lint
skip_missing_interpreters = True
#pip_pre=False

[pytest]
flakes-ignore =
  tests/test_TestfwTransformer.py ImportStarUsed
  tests/test_Anything.py ImportStarUsed
  PopenHelper.py UnusedImport
pep8maxlinelength = 81
pep8ignore =
  *.py E501 W503
  generateScript.py W191 E101 E126
  versioneer.py E226
  ChangeImportLines.py E126 E265 E731
  WD2Coast.py E123 E126
  SomeUtils.py E126
  TestfwTransformer.py E123
  tests/test_Anything.py W191 E501 E101 W601
  tests/test_DoxygenBuilder.py E501
  tests/test_ChangeImportLines.py E501 E265
markers =
    invocation: scons invocation tests (requires skip_install=false).
testpaths = tests

[testenv]
basepython =
    py27: python2.7
deps =
    -rrequirements.test.txt
    scons23: scons>=2.3,<2.4
    scons24: scons>=2.4,<2.5
    scons25: scons>=2.5,<2.6
passenv =
    cc_compiler
    cxx_compiler
    CFLAGS
    POPEN_COMMUNICATE_TIMEOUT
    PYPI_REPO_NAME
    PYPIRC_LOCATION
install_command =
    pip install --index https://devpi.coast-project.org/coast/CoastSconsider/+simple \
        --extra-index-url https://pypi.python.org/simple {opts} {packages}
whitelist_externals =
    virtualenv
    scons
commands =
    py.test --flakes --pep8 --cache-clear \
      --junit-xml=testresults.xml \
      {posargs}
    pyflakes setup.py
    flake8 setup.py

[testenv:lint]
basepython =
    python2.7
deps =
    -rrequirements.lint.txt
commands =
    pylint -f colorized -r n setup.py
#    pylint -f colorized -r n SConsider

[testenv:coverage]
basepython =
    python2.7
deps = -rrequirements.test.txt
skip_install = true
whitelist_externals =
    virtualenv
commands =
    py.test --quiet --cache-clear \
      -m "not invocation" \
      --cov=SConsider \
      --cov-report=xml:coverage/report.xml \
      --cov-report=term \
      --cov-report=html:coverage/ \
      {posargs}

[testenv:wheel]
basepython =
    python2.7
deps =
    -rrequirements.txt
    wheel
whitelist_externals =
    virtualenv
commands =
    python setup.py bdist_wheel {posargs}

[testenv:upload]
basepython=python2.7
deps =
    -rrequirements.txt
    wheel
    twine
whitelist_externals=
    virtualenv
    bash
commands =
    python setup.py sdist bdist_wheel
    bash -c \
      'eval "twine register \
        --config-file {env:PYPIRC_LOCATION:~/.pypirc} \
        --repository {env:PYPI_REPO_NAME:testpypi} \
        $(ls -tc1 dist/*.tar.gz | head -n1)"'
    bash -c \
      'eval "twine register \
        --config-file {env:PYPIRC_LOCATION:~/.pypirc} \
        --repository {env:PYPI_REPO_NAME:testpypi} \
        $(ls -tc1 dist/*.whl | head -n1)"'
    bash -c \
      'eval "twine upload \
        --skip-existing \
        --config-file {env:PYPIRC_LOCATION:~/.pypirc} \
        --repository {env:PYPI_REPO_NAME:testpypi} \
        $(ls -tc1 dist/*.tar.gz | head -n1) $(ls -tc1 dist/*.whl | head -n1)"'

[testenv:reformat]
basepython =
    python2.7
skip_install = True
skipsdists = True
deps =
    yapf
    docformatter
whitelist_externals =
    find
    bash
commands =
    - bash -c \
        "for n in setup.py $(find SConsider tests '(' -name '*.sconsider' -o -name '*.py' ')'); do \
            yapf --in-place $n; \
            docformatter --in-place $n; \
        done"
